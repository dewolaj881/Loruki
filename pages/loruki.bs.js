// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as React from "react";
import * as Utils$RescriptPpx from "../utils/Utils.bs.js";
import * as Tailwind$RescriptPpx from "../styles/tailwind/Tailwind.bs.js";

var globalStyles = CssJs.style([
      CssJs.backgroundColor({
            NAME: "hex",
            VAL: "047aed"
          }),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 400
          })
    ]);

var header = CssJs.merge([
      Tailwind$RescriptPpx.mx80,
      Tailwind$RescriptPpx.p6,
      Tailwind$RescriptPpx.itemsCenter,
      Tailwind$RescriptPpx.textWhite(1)
    ]);

var navbar = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.justifyBetween,
      Tailwind$RescriptPpx.itemsCenter,
      Tailwind$RescriptPpx.mb24
    ]);

var logo = CssJs.merge([
      Tailwind$RescriptPpx.text4Xl,
      Tailwind$RescriptPpx.itemsCenter
    ]);

var navUl = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.itemsCenter
    ]);

var anchor = CssJs.merge([Tailwind$RescriptPpx.mx4]);

var showcaseSection = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.mx80,
      Tailwind$RescriptPpx.justifyBetween,
      Tailwind$RescriptPpx.pb12
    ]);

var showcaseLeft = CssJs.merge([
      Tailwind$RescriptPpx.textWhite(1),
      Tailwind$RescriptPpx.pl8,
      Tailwind$RescriptPpx.pt6
    ]);

var showcaseTitle = CssJs.merge([
      Tailwind$RescriptPpx.text2Xl,
      Tailwind$RescriptPpx.mb12
    ]);

var showcaseTitle2 = CssJs.merge([
      Tailwind$RescriptPpx.text4Xl,
      Tailwind$RescriptPpx.mb12
    ]);

var inputForm = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.flexCol,
      Tailwind$RescriptPpx.p12,
      Tailwind$RescriptPpx.bgWhite(1),
      Tailwind$RescriptPpx.shadowXl,
      Tailwind$RescriptPpx.mr8,
      Tailwind$RescriptPpx.roundedXl,
      Tailwind$RescriptPpx.h96,
      Tailwind$RescriptPpx.w96,
      Tailwind$RescriptPpx.justifyEnd
    ]);

var input = CssJs.merge([
      Tailwind$RescriptPpx.borderB2,
      Tailwind$RescriptPpx.borderT0,
      Tailwind$RescriptPpx.borderL0,
      Tailwind$RescriptPpx.borderR0,
      Tailwind$RescriptPpx.my1
    ]);

var sendButton = CssJs.merge([
      Tailwind$RescriptPpx.bgBlue500(1),
      Tailwind$RescriptPpx.w24,
      Tailwind$RescriptPpx.p2,
      Tailwind$RescriptPpx.mt6,
      Tailwind$RescriptPpx.roundedLg,
      Tailwind$RescriptPpx.textWhite(1)
    ]);

var readButton = CssJs.merge([
      Tailwind$RescriptPpx.rounded,
      Tailwind$RescriptPpx.border2,
      Tailwind$RescriptPpx.p2,
      Tailwind$RescriptPpx.w44,
      Tailwind$RescriptPpx.textXl,
      Tailwind$RescriptPpx.mt6
    ]);

var welcome = CssJs.merge([
      Tailwind$RescriptPpx.bgWhite(1),
      Tailwind$RescriptPpx.textCenter,
      Tailwind$RescriptPpx.pt12,
      Tailwind$RescriptPpx.textXl
    ]);

var featuresSection = CssJs.merge([Tailwind$RescriptPpx.bgWhite(1)]);

var features = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.textCenter,
      Tailwind$RescriptPpx.justifyBetween,
      Tailwind$RescriptPpx.mx80,
      Tailwind$RescriptPpx.textXl,
      Tailwind$RescriptPpx.p10
    ]);

var featuresCount = CssJs.merge([
      Tailwind$RescriptPpx.text4Xl,
      Tailwind$RescriptPpx.mb4
    ]);

var featuresParagraph = CssJs.merge([
      Tailwind$RescriptPpx.textBlue800(1),
      Tailwind$RescriptPpx.mb8
    ]);

var imageStyles = CssJs.merge([
      Tailwind$RescriptPpx.h24,
      Tailwind$RescriptPpx.w24,
      Tailwind$RescriptPpx.mxAuto,
      Tailwind$RescriptPpx.mb4
    ]);

var cliSection = CssJs.merge([
      Tailwind$RescriptPpx.bgWhite(1),
      Tailwind$RescriptPpx.pb12
    ]);

var cliFlex = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.justifyBetween,
      Tailwind$RescriptPpx.mx68
    ]);

var cliImage = CssJs.merge([
      Tailwind$RescriptPpx.h56,
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.mt4
    ]);

var cards = CssJs.merge([Tailwind$RescriptPpx.textCenter]);

var card1 = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.textLg,
      Tailwind$RescriptPpx.shadow2Xl,
      Tailwind$RescriptPpx.h18,
      Tailwind$RescriptPpx.my10,
      Tailwind$RescriptPpx.roundedXl,
      Tailwind$RescriptPpx.itemsCenter,
      Tailwind$RescriptPpx.p4
    ]);

var card2 = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.textLg,
      Tailwind$RescriptPpx.shadow2Xl,
      Tailwind$RescriptPpx.h18,
      Tailwind$RescriptPpx.roundedXl,
      Tailwind$RescriptPpx.itemsCenter,
      Tailwind$RescriptPpx.p4,
      Tailwind$RescriptPpx.justifyCenter
    ]);

var hostingSection = CssJs.merge([Tailwind$RescriptPpx.mx64]);

var hostingFlex = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.justifyBetween,
      Tailwind$RescriptPpx.textWhite(1),
      Tailwind$RescriptPpx.p8
    ]);

var hostingImage = CssJs.merge([
      Tailwind$RescriptPpx.h68,
      Tailwind$RescriptPpx.w96,
      Tailwind$RescriptPpx.ml10
    ]);

var hostingHeading = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.text4Xl,
      Tailwind$RescriptPpx.justifyCenter,
      Tailwind$RescriptPpx.mb8,
      Tailwind$RescriptPpx.mt12
    ]);

var hostingParagraph = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.textLg,
      Tailwind$RescriptPpx.justifyCenter
    ]);

var hostingButton = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.justifyCenter,
      Tailwind$RescriptPpx.itemsCenter,
      Tailwind$RescriptPpx.mt10,
      Tailwind$RescriptPpx.bgIndigo900(1),
      Tailwind$RescriptPpx.w48,
      Tailwind$RescriptPpx.h12,
      Tailwind$RescriptPpx.p4,
      Tailwind$RescriptPpx.textCenter,
      Tailwind$RescriptPpx.mxAuto,
      Tailwind$RescriptPpx.roundedLg
    ]);

var supportedSection = CssJs.merge([
      Tailwind$RescriptPpx.bgWhite(1),
      Tailwind$RescriptPpx.py12
    ]);

var supportedFlex = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.justifyBetween,
      Tailwind$RescriptPpx.mx64
    ]);

var supportedCard = CssJs.merge([
      Tailwind$RescriptPpx.textLg,
      Tailwind$RescriptPpx.textCenter,
      Tailwind$RescriptPpx.shadow2Xl,
      Tailwind$RescriptPpx.roundedXl,
      Tailwind$RescriptPpx.itemsCenter,
      Tailwind$RescriptPpx.p8,
      Tailwind$RescriptPpx.justifyCenter,
      Tailwind$RescriptPpx.mx2,
      Tailwind$RescriptPpx.animateBounce
    ]);

var supportedHeading = CssJs.merge([
      Tailwind$RescriptPpx.text3Xl,
      Tailwind$RescriptPpx.textCenter,
      Tailwind$RescriptPpx.pb12
    ]);

var supportedHeading2 = CssJs.merge([Tailwind$RescriptPpx.mb2]);

var footerSection = CssJs.merge([
      Tailwind$RescriptPpx.bgIndigo900(1),
      Tailwind$RescriptPpx.textWhite(1)
    ]);

var footerFlex = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.justifyBetween,
      Tailwind$RescriptPpx.itemsCenter,
      Tailwind$RescriptPpx.mx56,
      Tailwind$RescriptPpx.py18
    ]);

var footerLeft = CssJs.merge([
      Tailwind$RescriptPpx.block,
      Tailwind$RescriptPpx.textLeft,
      Tailwind$RescriptPpx.itemsCenter
    ]);

var footerHeading = CssJs.merge([Tailwind$RescriptPpx.text3Xl]);

var footerRight = CssJs.merge([
      Tailwind$RescriptPpx.flex,
      Tailwind$RescriptPpx.h14,
      Tailwind$RescriptPpx.w14,
      Tailwind$RescriptPpx.mr28
    ]);

var footerImage = CssJs.merge([Tailwind$RescriptPpx.mx4]);

function $$default(param) {
  return React.createElement("main", {
              className: globalStyles
            }, React.createElement("header", {
                  className: header
                }, React.createElement("nav", {
                      className: navbar
                    }, React.createElement("div", undefined, React.createElement("a", {
                              href: "loruki"
                            }, React.createElement("h1", {
                                  className: logo
                                }, Utils$RescriptPpx.str("Loruki.")))), React.createElement("div", undefined, React.createElement("ul", {
                              className: navUl
                            }, React.createElement("a", {
                                  className: anchor,
                                  href: "loruki"
                                }, React.createElement("li", undefined, Utils$RescriptPpx.str("Home"))), React.createElement("a", {
                                  className: anchor,
                                  href: "loruki_features"
                                }, React.createElement("li", undefined, Utils$RescriptPpx.str("Features"))), React.createElement("a", {
                                  className: anchor,
                                  href: "loruki_docs"
                                }, React.createElement("li", undefined, Utils$RescriptPpx.str("Docs"))))))), React.createElement("section", {
                  className: showcaseSection
                }, React.createElement("div", {
                      className: showcaseLeft
                    }, React.createElement("h1", {
                          className: showcaseTitle2
                        }, Utils$RescriptPpx.str("Easier Deployment")), React.createElement("p", undefined, Utils$RescriptPpx.str("Deploy web apps of all kinds, from large scale enterprise APIs to static websites for")), React.createElement("p", undefined, Utils$RescriptPpx.str("individuals. Fill out the form to try a demo of our platfrom")), React.createElement("button", {
                          className: readButton
                        }, Utils$RescriptPpx.str("Read More"))), React.createElement("div", {
                      className: inputForm
                    }, React.createElement("h1", {
                          className: showcaseTitle
                        }, Utils$RescriptPpx.str("Request a Demo")), React.createElement("input", {
                          className: input,
                          id: "from-name",
                          name: "form-name",
                          placeholder: "Name",
                          type: "text"
                        }), React.createElement("input", {
                          className: input,
                          id: "from-name",
                          name: "form-name",
                          placeholder: "Company Name",
                          type: "text"
                        }), React.createElement("input", {
                          className: input,
                          id: "from-name",
                          name: "form-name",
                          placeholder: "Email",
                          type: "text"
                        }), React.createElement("button", {
                          className: sendButton
                        }, Utils$RescriptPpx.str("Send")))), React.createElement("section", {
                  className: welcome
                }, React.createElement("div", undefined, React.createElement("p", undefined, Utils$RescriptPpx.str("Welcome to the best platform for building applications of all")), React.createElement("p", undefined, Utils$RescriptPpx.str("types with modern architecture and scaling")))), React.createElement("section", {
                  className: featuresSection
                }, React.createElement("div", {
                      className: features
                    }, React.createElement("div", undefined, React.createElement("img", {
                              className: imageStyles,
                              src: "/loruki/img.svg"
                            }), React.createElement("h3", {
                              className: featuresCount
                            }, Utils$RescriptPpx.str("10,349,405")), React.createElement("p", {
                              className: featuresParagraph
                            }, Utils$RescriptPpx.str("Deployments"))), React.createElement("div", undefined, React.createElement("img", {
                              className: imageStyles,
                              src: "/loruki/upload.svg"
                            }), React.createElement("h3", {
                              className: featuresCount
                            }, Utils$RescriptPpx.str("987 TB")), React.createElement("p", {
                              className: featuresParagraph
                            }, Utils$RescriptPpx.str("Published"))), React.createElement("div", undefined, React.createElement("img", {
                              className: imageStyles,
                              src: "/loruki/molecular.svg"
                            }), React.createElement("h3", {
                              className: featuresCount
                            }, Utils$RescriptPpx.str("2,343,265")), React.createElement("p", {
                              className: featuresParagraph
                            }, Utils$RescriptPpx.str("Projects"))))), React.createElement("section", {
                  className: cliSection
                }, React.createElement("div", {
                      className: cliFlex
                    }, React.createElement("img", {
                          className: cliImage,
                          alt: "",
                          src: "/loruki/cli.png"
                        }), React.createElement("div", {
                          className: cards
                        }, React.createElement("div", {
                              className: card1
                            }, React.createElement("p", undefined, Utils$RescriptPpx.str("Easy to use, cross platfrom CLI"))), React.createElement("div", {
                              className: card2
                            }, React.createElement("p", undefined, Utils$RescriptPpx.str("Deploy in seconds")))))), React.createElement("section", {
                  className: hostingSection
                }, React.createElement("div", {
                      className: hostingFlex
                    }, React.createElement("div", undefined, React.createElement("h1", {
                              className: hostingHeading
                            }, Utils$RescriptPpx.str("Extreme Cloud Hosting")), React.createElement("p", {
                              className: hostingParagraph
                            }, Utils$RescriptPpx.str("Cloud hosting like you've never seen. Fast, efficient and scalable")), React.createElement("button", {
                              className: hostingButton
                            }, Utils$RescriptPpx.str("Read More"))), React.createElement("img", {
                          className: hostingImage,
                          alt: "",
                          src: "/loruki/cloud.png"
                        }))), React.createElement("section", {
                  className: supportedSection
                }, React.createElement("div", undefined, React.createElement("h1", {
                          className: supportedHeading
                        }, Utils$RescriptPpx.str("Supported Languages")), React.createElement("div", {
                          className: supportedFlex
                        }, React.createElement("div", {
                              className: supportedCard
                            }, React.createElement("h2", {
                                  className: supportedHeading2
                                }, Utils$RescriptPpx.str("Node.js")), React.createElement("img", {
                                  alt: "",
                                  src: "/loruki/node.png"
                                })), React.createElement("div", {
                              className: supportedCard
                            }, React.createElement("h2", {
                                  className: supportedHeading2
                                }, Utils$RescriptPpx.str("Python")), React.createElement("img", {
                                  alt: "",
                                  src: "/loruki/python.png"
                                })), React.createElement("div", {
                              className: supportedCard
                            }, React.createElement("h2", {
                                  className: supportedHeading2
                                }, Utils$RescriptPpx.str("C#")), React.createElement("img", {
                                  alt: "",
                                  src: "/loruki/csharp.png"
                                })), React.createElement("div", {
                              className: supportedCard
                            }, React.createElement("h2", {
                                  className: supportedHeading2
                                }, Utils$RescriptPpx.str("Ruby")), React.createElement("img", {
                                  alt: "",
                                  src: "/loruki/ruby.png"
                                })), React.createElement("div", {
                              className: supportedCard
                            }, React.createElement("h2", {
                                  className: supportedHeading2
                                }, Utils$RescriptPpx.str("PHP")), React.createElement("img", {
                                  alt: "",
                                  src: "/loruki/php.png"
                                })), React.createElement("div", {
                              className: supportedCard
                            }, React.createElement("h2", {
                                  className: supportedHeading2
                                }, Utils$RescriptPpx.str("Scala")), React.createElement("img", {
                                  alt: "",
                                  src: "/loruki/scala.png"
                                })), React.createElement("div", {
                              className: supportedCard
                            }, React.createElement("h2", {
                                  className: supportedHeading2
                                }, Utils$RescriptPpx.str("Clojure")), React.createElement("img", {
                                  alt: "",
                                  src: "/loruki/clojure.png"
                                }))))), React.createElement("footer", {
                  className: footerSection
                }, React.createElement("div", {
                      className: footerFlex
                    }, React.createElement("div", {
                          className: footerLeft
                        }, React.createElement("h1", {
                              className: footerHeading
                            }, Utils$RescriptPpx.str("Loruki")), React.createElement("p", undefined, Utils$RescriptPpx.str("Copyright 2020"))), React.createElement("div", undefined, React.createElement("a", {
                              href: "#"
                            }, React.createElement("p", undefined, Utils$RescriptPpx.str("Home"))), React.createElement("a", {
                              href: ""
                            }, React.createElement("p", undefined, Utils$RescriptPpx.str("Features"))), React.createElement("a", {
                              href: ""
                            }, React.createElement("p", undefined, Utils$RescriptPpx.str("Docs")))), React.createElement("div", {
                          className: footerRight
                        }, React.createElement("img", {
                              className: footerImage,
                              alt: "",
                              src: "/loruki/github.svg"
                            }), React.createElement("img", {
                              className: footerImage,
                              alt: "",
                              src: "/loruki/facebook.svg"
                            }), React.createElement("img", {
                              className: footerImage,
                              alt: "",
                              src: "/loruki/instagram.svg"
                            }), React.createElement("img", {
                              className: footerImage,
                              alt: "",
                              src: "/loruki/twitter.svg"
                            })))));
}

export {
  $$default ,
  $$default as default,
  
}
/* globalStyles Not a pure module */
